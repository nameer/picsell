[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.12,<4.0"
dependencies = [
    "alembic>=1.13.3",
    "email-validator>=2.2.0",
    "emails>=0.6",
    "fastapi[standard]>=0.115.0",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.5.2",
    "python-multipart>=0.0.10",
    "sqlmodel>=0.0.22",
    "tenacity>=9.0.0",
    "psycopg[binary]>=3.2.2",
    "requests>=2.32.3",
]

[tool.uv]
dev-dependencies = [
    "mypy>=1.11.2",
    "pre-commit>=3.8.0",
    "ruff>=0.6.7",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
