services:

  db:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  chat:
    container_name: picsell-chat
    restart: unless-stopped
    build:
      context: ./chat
    volumes:
      - ./chat/app:/app/app
    env_file:
      - .env
    command:
      - fastapi
      - dev
      - --reload
      - "app/main.py"
      - --port
      - "${CHAT_PORT:-8080}"
    develop:
      watch:
        - path: ./chat
          action: sync
          target: /app
          ignore:
            - ./chat/.venv
            - .venv
        - path: ./chat/pyproject.toml
          action: rebuild
    ports:
      - "${CHAT_PORT:-8080}:${CHAT_PORT:-8080}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${CHAT_PORT:-8080}/health/"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: picsell-backend
    restart: unless-stopped
    build:
      context: ./backend
    volumes:
      - ./backend/app:/app/app
    depends_on:
      db:
        condition: service_healthy
        restart: true
      chat:
        condition: service_healthy
        restart: true
    env_file:
      - .env
    environment:
      - CHAT_ENDPOINT=http://chat:${CHAT_PORT}
    command:
      - fastapi
      - dev
      - --reload
      - "app/main.py"
      - --port
      - "${BACKEND_PORT:-8000}"
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
          ignore:
            - ./backend/.venv
            - .venv
        - path: ./backend/pyproject.toml
          action: rebuild
    ports:
      - "${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-8000}/health/"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: picsell-frontend
    restart: unless-stopped
    build:
      context: ./frontend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      backend:
        condition: service_healthy
        restart: true
    env_file:
      - .env
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:${BACKEND_PORT:-8000}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    command:
      - npm
      - start

volumes:
  app-db-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tmp/db-data
